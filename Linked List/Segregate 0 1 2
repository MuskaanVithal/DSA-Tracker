#include<iostream>
using namespace std;

class Node{

    public:
    int data;
    Node* next;

    Node(int d){
        this->data = d;
        this->next = NULL;
    }
};

//Function to take input
Node* takeInput(){
    int data;
    cin>>data;
    Node *head = NULL;
    Node *tail = NULL;
    while(data!=-1){
        Node *newNode = new Node(data);
        if(head==NULL){
            head = newNode;
            tail = newNode;
        }
        else{
            tail -> next = newNode;
            tail = newNode;
        }
        cin>>data;
    }
    return head;
}

//Reverse Linked list
Node* reverseLL(Node* head){
    Node* prev = NULL;
    Node* curr = head;
    //Node* temp=NULL;
    while(curr!=NULL){
        Node* temp = curr->next;
        curr->next = prev;
        prev = curr;
        curr = temp;
    }

    head = prev;
    return head;
}

//Segregate012
Node *segregate012(Node *head)
{
    if (!head || !head->next)
        return head;
    Node *zero = new Node(-1);
    Node *pZero = zero;
    Node *one = new Node(-1);
    Node *pOne = one;
    Node *two = new Node(-1);
    Node *pTwo = two;
    Node *p = head;
    while (p)
    {
        if (p->data == 0)
        {
            pZero->next = p;
            pZero = pZero->next;
        }
        else if (p->data == 1)
        {
            pOne->next = p;
            pOne = pOne->next;
        }
        else
        {
            pTwo->next = p;
            pTwo = pTwo->next;
        }
        p = p->next;
    }
    pZero->next = one->next;
    pOne->next = two->next;
    pTwo->next = NULL;
    return zero->next;
}

//print the linked list
void print(Node *head){
    Node *temp = head;
    while(temp!=NULL){
        cout<<temp -> data<< " ";
        temp = temp -> next;
    }
    cout<<endl;
}

int main(){

    cout<<"Enter numbers: "<<endl;
    Node *head1 = takeInput();

    head1 = segregate012(head1);   
    
    print(head1);

    return 0;
}
