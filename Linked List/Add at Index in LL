#include<iostream>
using namespace std;

class Node{

    public:
    int data;
    Node* next;

    Node(int d){
        this->data = d;
        this->next = NULL;
    }
};

//Function to take input
Node* takeInput(){
    int data;
    cin>>data;
    Node *head = NULL;
    Node *tail = NULL;
    while(data!=-1){
        Node *newNode = new Node(data);
        if(head==NULL){
            head = newNode;
            tail = newNode;
        }
        else{
            tail -> next = newNode;
            tail = newNode;
        }
        cin>>data;
    }
    return head;
}

//Adding element in the beginning of LL
Node* addFirst(Node *head, int val){
    //cout<<"Entered function addFirst"<<endl;
    Node* newNode = new Node(val);
    newNode->data = val;
    newNode->next = head;
    head = newNode;
    return head;
}

//insert node at given position
Node* insertNode(Node *head, int i, int data){
    Node *newNode = new Node(data);
    int count = 0;
    Node *temp = head;

    if(i<0){
        cout<<"Invalid Argument"<<endl;
    }

    if(i==0){
        head = addFirst(head, data);
        return head;
    }

    while(temp!= NULL && count < i-1){
        temp = temp -> next;
        count++;
    }
    
    if(temp!=NULL){
    Node *t = temp -> next;
    temp -> next = newNode;
    newNode -> next = t;
    }
    return head;
    //if we dont want to create new variable t then:
    /*
    newNode -> next = temp -> next;
    temp -> next = newNode;
    */
}

//print the linked list
void print(Node *head){
    Node *temp = head;
    while(temp!=NULL){
        cout<<temp -> data<< " ";
        temp = temp -> next;
    }
    cout<<endl;
}

int main(){

    cout<<"Enter numbers: "<<endl;
    Node *head = takeInput();
    print(head);

    int i, data;
    cout<<endl;
    cout<<"Enter i and data:"<<endl;
    cin>>i>>data;
    head = insertNode(head,i,data);
    print(head);
    
    cout<<endl;
    return 0;
}
